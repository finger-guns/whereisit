version: '3'

networks:
  redis_network:
    driver: bridge
  scraper_network:
    driver: bridge
  formatter_network:
    driver: bridge
  wii_network:
    driver: bridge


services:
  message_broker:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - redis_network

  # SCRAPER
  scraper:
    build:
      context: ./scraper_service/
      dockerfile: Dockerfile
    volumes:
      - ./scraper_service/scraper/:/app
      - ./scraper_service/tmp:/app/tmp
    environment:
      REDIS_HOST: message_broker
      REDIS_PORT: 6379
      POSTGRES_HOST: scraper_db
      POSTGRES_USER: scraper
      POSTGRES_PASSWORD: scraper
      POSTGRES_DB: scraper
    depends_on:
      scraper_db:
        condition: service_healthy
      message_broker:
        condition: service_started
    networks:
      - scraper_network
      - redis_network
  
  scraper_db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=scraper
      - POSTGRES_PASSWORD=scraper
      - POSTGRES_DB=scraper
    volumes:
      - ./scraper_db:/docker-entrypoint-initdb.d/
    ports:
      - 6543:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scraper"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scraper_network
  

  # FORMATTER
  formatter:
    build:
      context: ./formatter/
      dockerfile: Dockerfile
    volumes:
      - ./formatter/:/app
      - ./formatter/tmp:/app/tmp
    environment:
      REDIS_HOST: message_broker
      REDIS_PORT: 6379
      POSTGRES_HOST: formatter_db
      POSTGRES_PORT: 5432
      POSTGRES_USER: formatter
      POSTGRES_PASSWORD: formatter
      POSTGRES_DB: formatter
    networks:
      - formatter_network
      - redis_network
    depends_on:
      formatter_db:
        condition: service_healthy
      message_broker:
        condition: service_started
  formatter_db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=formatter
      - POSTGRES_PASSWORD=formatter
      - POSTGRES_DB=formatter
    volumes:
      - ./formatter_db:/docker-entrypoint-initdb.d/
    ports:
      - 6544:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U formatter"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - formatter_network
  wii:
    build:
      context: ./wii_api
      dockerfile: Dockerfile
    ports:
      - 8080:8000
    volumes:
      - ./wii_api/wii/:/app
      - ./wii_api/tmp:/app/tmp
    environment:
      REDIS_HOST: message_broker
      REDIS_PORT: 6379
      POSTGRES_HOST: wii_db
      POSTGRES_PORT: 5432
      POSTGRES_USER: wii
      POSTGRES_PASSWORD: wii
      POSTGRES_DB: wii
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - wii_network
      - redis_network
    depends_on:
      wii_db:
        condition: service_healthy
      message_broker:
        condition: service_started
  wii_db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=wii
      - POSTGRES_PASSWORD=wii
      - POSTGRES_DB=wii
    volumes:
      - ./wii_db:/docker-entrypoint-initdb.d/
    ports:
      - 6545:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wii"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wii_network
